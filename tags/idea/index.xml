<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>idea on</title><link>https://wangze.tech/tags/idea/</link><description>Recent content in idea on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 15 May 2023 22:03:40 +0800</lastBuildDate><atom:link href="https://wangze.tech/tags/idea/index.xml" rel="self" type="application/rss+xml"/><item><title>抢红包系统</title><link>https://wangze.tech/%E6%8A%A2%E7%BA%A2%E5%8C%85%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 15 May 2023 22:03:40 +0800</pubDate><guid>https://wangze.tech/%E6%8A%A2%E7%BA%A2%E5%8C%85%E7%B3%BB%E7%BB%9F/</guid><description>不能超抢 剩余的到期需要返还 通常使用的解决高并发问题方案 方案一：使用内存操作替代实时的 DB 事务操作 可能丢数据
方案二：使用乐观锁替代悲观锁 同时抢的只能有一个能成功，可能手慢的反而能抢到
微信红包系统的高并发解决方案
方案三：将关于同一个红包的所有请求聚合到同一个 双维度库表设计：db_xx.t_y_dd xx/y 红包 ID 的 hash 值后三位，dd 的取值范围 01～31，一个月最多 31 天</description></item><item><title>秒杀系统</title><link>https://wangze.tech/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 15 May 2023 21:55:29 +0800</pubDate><guid>https://wangze.tech/%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/</guid><description>主要问题：并发读、并发写
关键点 高性能 一致性 高可用 原则 请求数据要尽量少 减少序列化和反序列化 字符转化 请求数要尽量少 如在请求路径上将多个 Javascript 用逗号合并，服务端一次性返回多个文件 路径要尽量短 将多个相互强依赖的应用合并部署到一起 依赖要尽量少 可以把依赖的服务先降级或停用 不要有单点 将服务无状态化，让实例可以动态伸缩 把秒杀系统独立出来单独打造一个系统，并且在系统部署上也独立做一个机器集群，避免影响非秒杀商品的机器 动静分离 根据情况把静态数据缓存到离用户近的地方（浏览器、CDN、服务端的 Cache） 直接缓存 HTTP 连接 怎么做： URL 唯一化（如 /id=xxx） 分离浏览者相关的因素（比如登录信息，这些通过动态请求获取） 分离时间因素，也通过动态请求获取 异步化地域因素 去掉 Cookie（让缓存的静态数据中不含有 Cookie） 服务端： 生成完整页面 客户端获取动态内容 架构方案 实体机单机部署：大 Cache 容量，高缓存命中率 统一 Cache 层 上 CDN：二级 Cache（一级发现没缓存数据就去二级找，都没有就回源获取数据并缓存到一级、二级缓存） 热点数据 静态热点数据：能提前预测的 通过商业手段（强制让商家登记、对买家每天访问的商品进行大数据计算） 动态热点数据：不能提前预测的 （异步）收集交易链路上各个环节中的中间件产品的热点 Key（Nginx、缓存、RPC 服务框架等） 上报热点，透传给下游系统 流量削峰 排队 答题：延缓请求，并可以防止买家使用秒杀器作弊 分层过滤：只在写数据时进行强一致性校验 性能优化 影响：</description></item><item><title>Tips</title><link>https://wangze.tech/Tips/</link><pubDate>Sun, 07 May 2023 00:00:00 +0800</pubDate><guid>https://wangze.tech/Tips/</guid><description> 想到什么点子就赶紧记下来，不然过一会就忘了，即使只是上个厕所洗个手也会忘。 做一件事的时候，想象一下，最坏的情况能坏到哪呢。 你花在挑选寝室用的电视机上的时间比你选择专业和学习领域的时间长。 找出自己擅长和不擅长做的事。 什么工作是我非做不可的。 用搜索。</description></item></channel></rss>