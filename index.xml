<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🫧 11ze</title>
      <link>https://wangze.tech</link>
      <description>Last 10 notes on 🫧 11ze</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>英语</title>
    <link>https://wangze.tech/%E8%8B%B1%E8%AF%AD</link>
    <guid>https://wangze.tech/%E8%8B%B1%E8%AF%AD</guid>
    <description> GitHub - xiaolai/everyone-can-use-english: 人人都能用英语 Think in English 英语学习唯一正确方法具体实践 - 哔哩哔哩 背单词 BigShot英语 - 哔哩哔哩视频 .</description>
    <pubDate>Wed, 24 Jan 2024 15:01:09 GMT</pubDate>
  </item><item>
    <title>44｜答疑文章（三）：说一说这些好问题</title>
    <link>https://wangze.tech/44%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%B4%E4%B8%80%E8%AF%B4%E8%BF%99%E4%BA%9B%E5%A5%BD%E9%97%AE%E9%A2%98</link>
    <guid>https://wangze.tech/44%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%B4%E4%B8%80%E8%AF%B4%E8%BF%99%E4%BA%9B%E5%A5%BD%E9%97%AE%E9%A2%98</guid>
    <description>join 的写法 § 在 MySQL 里，NULL 跟任何值执行等值判断和不等值判断的结果，都是 NULL。这里包括， select NULL = NULL 的结果，也是返回 NULL。 where a.f2=b.f2 就表示，查询结果里面不会包含 b.f2 是 NULL 的行 使用 left join 时，左边的表不一定是驱动表。 如果需要 left join 的语义，就不能把被驱动表的字段放在 where 条件里面做等值判断或不等值判断，必须都写在 on 里面 distinct 和 group by 的性能 § 如果只需要去重，不需要执行聚合函数，distinct 和 group by 哪种效率高一些呢？ 没有索引时一样 select a,count(*) from t group by a order by null; 这条语句的逻辑是：按照字段 a 分组，计算每组的 a 出现的次数。在这个结果里，由于做的是聚合计算，相同的 a 只出现一次。37 章有关于 group by 的相关内容 .</description>
    <pubDate>Wed, 24 Jan 2024 15:01:08 GMT</pubDate>
  </item><item>
    <title>30｜答疑文章（二）：用动态的观点看加锁</title>
    <link>https://wangze.tech/30%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%94%A8%E5%8A%A8%E6%80%81%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%E5%8A%A0%E9%94%81</link>
    <guid>https://wangze.tech/30%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%94%A8%E5%8A%A8%E6%80%81%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%E5%8A%A0%E9%94%81</guid>
    <description>下面的讨论基于此表 CREATE TABLE `t` ( `id` int(11) NOT NULL, `c` int(11) DEFAULT NULL, `d` int(11) DEFAULT NULL, PRIMARY KEY (`id`), KEY `c` (`c`) ) ENGINE=InnoDB; insert into t values(0,0,0),(5,5,5),(10,10,10),(15,15,15),(20,20,20),(25,25,25); show engine innodb status 命令输出的信息中，LATESTADETECTED DEADLOCK 记录了最后一次死锁信息 由于锁是一个个加的，要避免死锁，对同一组资源，要按照尽量相同的顺序访问； 在发生死锁的时刻，for update 这条语句占有的资源更多，回滚成本更大，所以 InnoDB 选择了回滚成本更小的 lock in share mode 语句，来回滚。 所谓“间隙”，其实根本就是由“这个间隙右边的那个记录”定义的。 思考题 § 空表的间隙的定义 一个空表只有一个间隙 比如执行：begin; select * from t where id&gt;1 for update; 加锁范围：next_key lock (-∞, supremum] 评论区 § 删除数据，导致锁扩大的描述：“因此，我们就知道了，由于 delete 操作把 id=10 这一行删掉了，原来的两个间隙 (5,10)、(10,15）变成了一个 (5,15)。”我觉得这个提到的(5, 10) 和 (10, 15)两个间隙会让人有点误解，实际上在删除之前间隙锁只有一个(10, 15)，删除了数据之后，导致间隙锁左侧扩张成了5，间隙锁成为了(5, 15)。 .</description>
    <pubDate>Wed, 24 Jan 2024 15:01:07 GMT</pubDate>
  </item><item>
    <title>服务器疑难杂症</title>
    <link>https://wangze.tech/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87</link>
    <guid>https://wangze.tech/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87</guid>
    <description>Linux Crontab § 看日志：/var/log/cron 问题：Jan 9 15:05:01 i-9010749a crond[14778]: (www) PAM ERROR (鉴定令牌不再有效；需要新的鉴定令牌) 解决：执行 chage -M 99999 www # 99999 单位是天 Crontab 执行提示没有权限 Nginx § try_files 需要带上匹配的规则名，如 location /test，则可以是 try_files $uri /test/index.</description>
    <pubDate>Tue, 23 Jan 2024 05:41:47 GMT</pubDate>
  </item><item>
    <title>Mac 应用已损坏</title>
    <link>https://wangze.tech/Mac-%E5%BA%94%E7%94%A8%E5%B7%B2%E6%8D%9F%E5%9D%8F</link>
    <guid>https://wangze.tech/Mac-%E5%BA%94%E7%94%A8%E5%B7%B2%E6%8D%9F%E5%9D%8F</guid>
    <description> 安装后打开提示已损坏时执行命令：sudo xattr -d com.apple.quarantine &quot;/Applications/{appName}.app&quot; 可能还需要到系统设置 - 隐私与安全下方允许运行应用 .</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item><item>
    <title>Obsidian 插件</title>
    <link>https://wangze.tech/Obsidian-%E6%8F%92%E4%BB%B6</link>
    <guid>https://wangze.tech/Obsidian-%E6%8F%92%E4%BB%B6</guid>
    <description>推荐 § Enhancing Mindmap 使用思维导图视图查看文档，只需修改文档头 待折腾 § 玩转 Obsidian 08：利用 Dataview 打造自动化 HomePage | by 闲者时间 | Medium .</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item><item>
    <title>iCloud 不同步指定文件</title>
    <link>https://wangze.tech/iCloud-%E4%B8%8D%E5%90%8C%E6%AD%A5%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6</link>
    <guid>https://wangze.tech/iCloud-%E4%B8%8D%E5%90%8C%E6%AD%A5%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6</guid>
    <description>说明 § iCloud 不会同步带有 .nosync 后缀的文件和文件夹 使用场景 § 在 iCloud 中忽略 .git 且 git 命令可以正常使用 § cd repo mv .git .git.nosync ln -s .git.nosync .git.</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item><item>
    <title>iCloud 同步卡住</title>
    <link>https://wangze.tech/iCloud-%E5%90%8C%E6%AD%A5%E5%8D%A1%E4%BD%8F</link>
    <guid>https://wangze.tech/iCloud-%E5%90%8C%E6%AD%A5%E5%8D%A1%E4%BD%8F</guid>
    <description>解决方案 § 终端执行命令 kill iCloud 进程 killall bird &amp;&amp; killall cloudd 点击访达侧边栏的 iCloud ，观察同步进度，若还是卡住，继续 kill iCloud 进程直到正常 每 10 分钟执行一次确保 iCloud 正常同步 $ crontab -e */10 * * * * killall bird &amp;&amp; killall cloudd # kill iCloud 进程 参考 § 一日一技 | Mac 上 iCloud 云盘同步卡住了？可以试试这样做 .</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item><item>
    <title>第一期</title>
    <link>https://wangze.tech/%E7%AC%AC%E4%B8%80%E6%9C%9F</link>
    <guid>https://wangze.tech/%E7%AC%AC%E4%B8%80%E6%9C%9F</guid>
    <description> 让应用支持 iCloud 同步 OneFlow – a Git branching model and workflow | End of Line Blog 《二哥的Java进阶之路》小册简介，GitHub星标10000+，共计 32 万余字，500+张手绘图 | 二哥的Java进阶之路 .</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item><item>
    <title>让应用支持 iCloud 同步</title>
    <link>https://wangze.tech/%E8%AE%A9%E5%BA%94%E7%94%A8%E6%94%AF%E6%8C%81-iCloud-%E5%90%8C%E6%AD%A5</link>
    <guid>https://wangze.tech/%E8%AE%A9%E5%BA%94%E7%94%A8%E6%94%AF%E6%8C%81-iCloud-%E5%90%8C%E6%AD%A5</guid>
    <description> 先退出要同步的应用 下载腾讯柠檬 在柠檬里点击卸载应用的时候看详细信息，最下面找到应用保存数据的位置 用访达打开 复制数据文件夹到 iCloud 删除原文件夹 在原文件夹的位置创建同名软链接指向 iCloud 里的数据文件 .</description>
    <pubDate>Tue, 23 Jan 2024 04:34:01 GMT</pubDate>
  </item>
    </channel>
  </rss>