<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🫧 11ze</title>
      <link>https://wangze.tech</link>
      <description>Last 10 notes on 🫧 11ze</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>44｜答疑文章（三）：说一说这些好问题</title>
    <link>https://wangze.tech/44%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%B4%E4%B8%80%E8%AF%B4%E8%BF%99%E4%BA%9B%E5%A5%BD%E9%97%AE%E9%A2%98</link>
    <guid>https://wangze.tech/44%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%B4%E4%B8%80%E8%AF%B4%E8%BF%99%E4%BA%9B%E5%A5%BD%E9%97%AE%E9%A2%98</guid>
    <description>join 的写法 § 在 MySQL 里，NULL 跟任何值执行等值判断和不等值判断的结果，都是 NULL。这里包括， select NULL = NULL 的结果，也是返回 NULL。 where a.f2=b.f2 就表示，查询结果里面不会包含 b.f2 是 NULL 的行 使用 left join 时，左边的表不一定是驱动表。 如果需要 left join 的语义，就不能把被驱动表的字段放在 where 条件里面做等值判断或不等值判断，必须都写在 on 里面 distinct 和 group by 的性能 § 如果只需要去重，不需要执行聚合函数，distinct 和 group by 哪种效率高一些呢？ 没有索引时一样 select a,count(*) from t group by a order by null; 这条语句的逻辑是：按照字段 a 分组，计算每组的 a 出现的次数。在这个结果里，由于做的是聚合计算，相同的 a 只出现一次。37 章有关于 group by 的相关内容 .</description>
    <pubDate>Fri, 01 Dec 2023 02:12:54 GMT</pubDate>
  </item><item>
    <title>30｜答疑文章（二）：用动态的观点看加锁</title>
    <link>https://wangze.tech/30%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%94%A8%E5%8A%A8%E6%80%81%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%E5%8A%A0%E9%94%81</link>
    <guid>https://wangze.tech/30%EF%BD%9C%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%94%A8%E5%8A%A8%E6%80%81%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%E5%8A%A0%E9%94%81</guid>
    <description>下面的讨论基于此表 CREATE TABLE `t` ( `id` int(11) NOT NULL, `c` int(11) DEFAULT NULL, `d` int(11) DEFAULT NULL, PRIMARY KEY (`id`), KEY `c` (`c`) ) ENGINE=InnoDB; insert into t values(0,0,0),(5,5,5),(10,10,10),(15,15,15),(20,20,20),(25,25,25); show engine innodb status 命令输出的信息中，LATESTADETECTED DEADLOCK 记录了最后一次死锁信息 由于锁是一个个加的，要避免死锁，对同一组资源，要按照尽量相同的顺序访问； 在发生死锁的时刻，for update 这条语句占有的资源更多，回滚成本更大，所以 InnoDB 选择了回滚成本更小的 lock in share mode 语句，来回滚。 所谓“间隙”，其实根本就是由“这个间隙右边的那个记录”定义的。 思考题 § 空表的间隙的定义 一个空表只有一个间隙 比如执行：begin; select * from t where id&gt;1 for update; 加锁范围：next_key lock (-∞, supremum] 评论区 § 删除数据，导致锁扩大的描述：“因此，我们就知道了，由于 delete 操作把 id=10 这一行删掉了，原来的两个间隙 (5,10)、(10,15）变成了一个 (5,15)。”我觉得这个提到的(5, 10) 和 (10, 15)两个间隙会让人有点误解，实际上在删除之前间隙锁只有一个(10, 15)，删除了数据之后，导致间隙锁左侧扩张成了5，间隙锁成为了(5, 15)。 .</description>
    <pubDate>Fri, 01 Dec 2023 02:12:53 GMT</pubDate>
  </item><item>
    <title>开发环境</title>
    <link>https://wangze.tech/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83</link>
    <guid>https://wangze.tech/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83</guid>
    <description>设备 § M1 MacBook Pro 14 先更新系统 Homebrew § 官网 brew tap homebrew/cask-drivers brew tap homebrew/cask-fonts brew tap homebrew/cask-versions brew tap buo/cask-upgrade brew tap mongodb/brew brew install git git-lfs git-flow git config --global core.</description>
    <pubDate>Thu, 30 Nov 2023 06:44:09 GMT</pubDate>
  </item><item>
    <title>发布方案</title>
    <link>https://wangze.tech/%E5%8F%91%E5%B8%83%E6%96%B9%E6%A1%88</link>
    <guid>https://wangze.tech/%E5%8F%91%E5%B8%83%E6%96%B9%E6%A1%88</guid>
    <description>选用方案 § quartz 怎么做 § 将笔记作为发布仓库的 content/ 即可 .</description>
    <pubDate>Fri, 24 Nov 2023 05:14:26 GMT</pubDate>
  </item><item>
    <title>搭建数字花园</title>
    <link>https://wangze.tech/%E6%90%AD%E5%BB%BA%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD</link>
    <guid>https://wangze.tech/%E6%90%AD%E5%BB%BA%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD</guid>
    <description>主要步骤 § 同步方案 发布方案 配置自定义域名 添加评论区 配置图床 本库自动提交到 GitHub 不同步 .git 文件夹 换新设备 问题合集 § 发布笔记 404 特殊字符 .</description>
    <pubDate>Fri, 24 Nov 2023 05:14:26 GMT</pubDate>
  </item><item>
    <title>PHP</title>
    <link>https://wangze.tech/PHP</link>
    <guid>https://wangze.tech/PHP</guid>
    <description> PHP 开发设置 PHP-FPM 配置 PHP 错误码设计 Laravel Pint 使用 Laravel 开发注意事项 .</description>
    <pubDate>Tue, 21 Nov 2023 02:19:12 GMT</pubDate>
  </item><item>
    <title>PHP 开发注意事项</title>
    <link>https://wangze.tech/Laravel-%E5%BC%80%E5%8F%91%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9</link>
    <guid>https://wangze.tech/Laravel-%E5%BC%80%E5%8F%91%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9</guid>
    <description>MySQL § 时区：Asia/Shanghai binlog 格式：row 隔离级别：读提交 select @@transaction_isolation; set @global transaction isolation level read committed; 目录说明 § Requests 表单验证 Controllers 控制器，无业务或写简单的业务逻辑 Services 行业务逻辑处理 Models 定义模型，提供数据库操作 Traits 需要复用的代码 任务调度 § https://learnku.</description>
    <pubDate>Tue, 21 Nov 2023 02:09:09 GMT</pubDate>
  </item><item>
    <title>PHP 测试</title>
    <link>https://wangze.tech/PHP-%E6%B5%8B%E8%AF%95</link>
    <guid>https://wangze.tech/PHP-%E6%B5%8B%E8%AF%95</guid>
    <description> 10 testing best practices for Laravel in 2023 .</description>
    <pubDate>Thu, 02 Nov 2023 06:31:17 GMT</pubDate>
  </item><item>
    <title>Laravel Pint 使用</title>
    <link>https://wangze.tech/Laravel-Pint-%E4%BD%BF%E7%94%A8</link>
    <guid>https://wangze.tech/Laravel-Pint-%E4%BD%BF%E7%94%A8</guid>
    <description> 参考：https://laraveldaily.com/post/laravel-pint-pre-commit-hooks-github-actions PhpStorm 已内置支持，可在设置里搜索到并主动打开 Vscode 安装插件：https://marketplace.visualstudio.</description>
    <pubDate>Wed, 01 Nov 2023 05:04:02 GMT</pubDate>
  </item><item>
    <title>Linux 安装 oh-my-zsh</title>
    <link>https://wangze.tech/Linux-%E5%AE%89%E8%A3%85-oh-my-zsh</link>
    <guid>https://wangze.tech/Linux-%E5%AE%89%E8%A3%85-oh-my-zsh</guid>
    <description>安装 Zsh § https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH sudo apt install zsh # 查看所有可用 shell chsh -l # 将终端默认 shell 切换到 zsh，后面要输入实际看到的 zsh 路径 chsh -s /bin/zsh # 新开一个终端确认是否切换成功 echo $SHELL 安装 Oh-my-zsh § https://ohmyz.</description>
    <pubDate>Thu, 21 Sep 2023 08:08:56 GMT</pubDate>
  </item>
    </channel>
  </rss>