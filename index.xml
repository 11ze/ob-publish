<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>11ze</title>
      <link>https://wangze.tech</link>
      <description>Last 10 notes on 11ze</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>36｜为什么临时表可以重名？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/36%EF%BD%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%B4%E6%97%B6%E8%A1%A8%E5%8F%AF%E4%BB%A5%E9%87%8D%E5%90%8D%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/36%EF%BD%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%B4%E6%97%B6%E8%A1%A8%E5%8F%AF%E4%BB%A5%E9%87%8D%E5%90%8D%EF%BC%9F</guid>
    <description>...</description>
    <pubDate>Mon, 13 May 2024 15:00:00 GMT</pubDate>
  </item><item>
    <title>39｜自增主键为什么不是连续的？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/39%EF%BD%9C%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E6%98%AF%E8%BF%9E%E7%BB%AD%E7%9A%84%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/39%EF%BD%9C%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E6%98%AF%E8%BF%9E%E7%BB%AD%E7%9A%84%EF%BC%9F</guid>
    <description>自增值保存在哪儿？ 表的结构定义存放在后缀名为.frm 的文件中，但是并不会保存自增值。 MyISAM 引擎的自增值保存在数据文件中。 InnoDB 在 MySQL 5.7 及之前的版本，自增值保存在内存里。每次重启后，第一次打开表的时候，都会去找自增值的最大值 max(id)，然后将 max(id)+1 作为这个表当前的自增值。 ...</description>
    <pubDate>Mon, 13 May 2024 15:00:00 GMT</pubDate>
  </item><item>
    <title>45｜自增 id 用完怎么办？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/45%EF%BD%9C%E8%87%AA%E5%A2%9E-id-%E7%94%A8%E5%AE%8C%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/45%EF%BD%9C%E8%87%AA%E5%A2%9E-id-%E7%94%A8%E5%AE%8C%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F</guid>
    <description>...</description>
    <pubDate>Mon, 13 May 2024 15:00:00 GMT</pubDate>
  </item><item>
    <title>11｜怎么给字符串字段加索引？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/11%EF%BD%9C%E6%80%8E%E4%B9%88%E7%BB%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5%E5%8A%A0%E7%B4%A2%E5%BC%95%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/11%EF%BD%9C%E6%80%8E%E4%B9%88%E7%BB%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5%E5%8A%A0%E7%B4%A2%E5%BC%95%EF%BC%9F</guid>
    <description>...</description>
    <pubDate>Sun, 12 May 2024 15:00:01 GMT</pubDate>
  </item><item>
    <title>PHP 开发设置</title>
    <link>https://wangze.tech/PHP-%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE</link>
    <guid>https://wangze.tech/PHP-%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE</guid>
    <description>Laravel Pint（可选） 如何在 PHPSTORM 配置 Laravel Pint 代码格式化包 Laravel Pint VSCode Extension PHP Intelephense PHP DocBlocker .</description>
    <pubDate>Sun, 12 May 2024 15:00:01 GMT</pubDate>
  </item><item>
    <title>我的开发环境</title>
    <link>https://wangze.tech/%E6%88%91%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83</link>
    <guid>https://wangze.tech/%E6%88%91%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83</guid>
    <description>...</description>
    <pubDate>Fri, 10 May 2024 15:00:02 GMT</pubDate>
  </item><item>
    <title>搭建数字花园</title>
    <link>https://wangze.tech/%E6%90%AD%E5%BB%BA%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD</link>
    <guid>https://wangze.tech/%E6%90%AD%E5%BB%BA%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD</guid>
    <description>同步方案 可选方案 Obsidian Sync：官方，付费 Remotely Sync：第三方插件，自动同步最短间隔 1 分钟（可以手动执行同步），免费 iCloud：实时同步，免费 我使用的同步方案 iCloud iPhone 安装 Obsidian 进入 Obsidian 创建一个打开 iCloud 同步功能的 Vault 此时 iCloud ...</description>
    <pubDate>Fri, 10 May 2024 15:00:02 GMT</pubDate>
  </item><item>
    <title>01｜基础架构：一条 SQL 查询语句是如何执行的？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/01%EF%BD%9C%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%EF%BC%9A%E4%B8%80%E6%9D%A1-SQL-%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/01%EF%BD%9C%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%EF%BC%9A%E4%B8%80%E6%9D%A1-SQL-%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84%EF%BC%9F</guid>
    <description>MySQL 的逻辑链接架构图 1. 客户端连接数据库 用 wait_timeout 参数控制连接器长时间没操作自动断开的时间 只有新建的连接才会使用新的权限设置 尽量使用长连接 使用长连接的问题：可能内存疯涨，因为 MySQL 在执行过程中临时使用的内存是管理在连接对象里面，在连接断开的时候才释放 两个解决方案 定期断开长连接。使用一段时间，或者程序里面判断执行过一个占用内存的大查询后，主动断开连接，之后要查询再重连 MySQL 5.7 或更新版本，可以在执行一个比较大的操作后，执行 mysql_reset_connection 初始化连接资源 这个过程不会重连和重新做权限验证，会将连接恢复到刚刚创建完时的状态 2.</description>
    <pubDate>Thu, 09 May 2024 15:00:03 GMT</pubDate>
  </item><item>
    <title>14｜count(*) 这么慢，我该怎么办？</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/14%EF%BD%9Ccount()-%E8%BF%99%E4%B9%88%E6%85%A2%EF%BC%8C%E6%88%91%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/14%EF%BD%9Ccount()-%E8%BF%99%E4%B9%88%E6%85%A2%EF%BC%8C%E6%88%91%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F</guid>
    <description>count(*) 的实现方式 MyISAM 引擎把一个表的总行数存在磁盘上，执行时直接返回这个数 InnoDB 引擎每次都需要把数据一行行地从引擎里面读出来，累计行数 以上都是在说没有过滤条件的 `count(*) count 是一行行读数据，是一致性读（快照读），不加锁 其他计数方式 在数据库保存计数 新建一个表专门用于计数 ...</description>
    <pubDate>Thu, 09 May 2024 15:00:03 GMT</pubDate>
  </item><item>
    <title>MySQL 实战 45 讲</title>
    <link>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2</link>
    <guid>https://wangze.tech/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2/MySQL-%E5%AE%9E%E6%88%98-45-%E8%AE%B2</guid>
    <description>...</description>
    <pubDate>Thu, 09 May 2024 15:00:03 GMT</pubDate>
  </item>
    </channel>
  </rss>