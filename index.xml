<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🫧 11ze</title>
      <link>https://wangze.tech</link>
      <description>Last 10 notes on 🫧 11ze</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>37｜数据分布优化：如何应对数据倾斜？</title>
    <link>https://wangze.tech/37%EF%BD%9C%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83%E4%BC%98%E5%8C%96%EF%BC%9A%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%EF%BC%9F</link>
    <guid>https://wangze.tech/37%EF%BD%9C%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83%E4%BC%98%E5%8C%96%EF%BC%9A%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%EF%BC%9F</guid>
    <description>数据量倾斜 在某些情况下，实例上的数据分布不均衡，某个实例上的数据特别多 bigkey 集合类型的 bigkey 如果是集合类型，可以拆分成很多个小的集合类型数据，分散保存在不同的实例上 比如通过 ID 范围拆分 避免 bigkey Slot 分配不均衡 手动迁移 Redis Cluster 的 Slot cluster slots 命令查看 Slot 分配情况 可用命令 CLUSTER SETSLOT：使用不同的选项进行三种设置，分别是设置 Slot 要迁入的目标实例，Slot 要迁出的源实例，以及 Slot 所属的实例 CLUSTER GETKEYSINSLOT：获取某个 Slot 中一定数量的 key。 MIGRATE：把一个 key 从源实例实际迁移到目标实例 手动迁移 Codis 的 Slot codis-admin —dashboard=ADDR -slot-action —create —sid=300 —gid=6 Hash Tag 指加在键值对 key 中的一对花括号 {} 如果有 Hash Tag，客户端在计算 key 的 CRC16 值时，只对 Hash Tag 花括号中的 key 内容进行计算 相同 Hash Tag 的数据会被映射到相同的 Slot 上 使用场景：用在 Redis Cluster 和 Codis 中，支持事务操作和范围查询 因为 Redis Cluster 和 Codis 本身不支持跨实例的事务操作 建议：不使用 Hash Tag，在客户端执行事务操作和范围查询 数据访问倾斜 虽然每个集群实例上的数据量相差不大，但是某个实例上的数据是热点数据，被访问得非常频繁 根本原因：实例存在热点数据 应对方法 只读的热点数据 具体做法：将热点数据复制多分，每个副本 key 增加一个随机前缀，映射到不同的实例的 Slot 中 有读有写的热点数据 给实例本身增加资源 比如配置更高的机器 集群的实例资源配置建议 在构建切片集群时，尽量使用大小配置相同的实例（例如实例内存配置保持相同），可以避免因实例资源不均衡而在不同实例上分配不同数量的 Slot .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>38｜通信开销：限制 Redis Cluster 规模的关键因素</title>
    <link>https://wangze.tech/38%EF%BD%9C%E9%80%9A%E4%BF%A1%E5%BC%80%E9%94%80%EF%BC%9A%E9%99%90%E5%88%B6-Redis-Cluster-%E8%A7%84%E6%A8%A1%E7%9A%84%E5%85%B3%E9%94%AE%E5%9B%A0%E7%B4%A0</link>
    <guid>https://wangze.tech/38%EF%BD%9C%E9%80%9A%E4%BF%A1%E5%BC%80%E9%94%80%EF%BC%9A%E9%99%90%E5%88%B6-Redis-Cluster-%E8%A7%84%E6%A8%A1%E7%9A%84%E5%85%B3%E9%94%AE%E5%9B%A0%E7%B4%A0</guid>
    <description> Redis Cluster 实例间以 Gossip 协议进行通信的机制 Gossip 协议的工作原理 两个实例间进行 PING、PONG 消息传递的情况 每个实例默认每秒从集群中随机挑选一些实例，把 PING 消息发送给挑选出来的实例，用来检测这些实例是否在线，并交换彼此的状态信息 PING 消息中封装了发送消息的实例自身的状态信息、部分其它实例的状态信息，以及 Slot 映射表 一个实例在接收到 PING 消息后，会给发送 PING 消息的实例，发送一个 PONG 消息。PONG 消息包含的内容和 PING 消息一样 Gossip 消息大小 PING 和 PONG 消息的消息体都大约 12KB PING 消息中带有一个长度为 16384 bit 的 Bitmap 每一位对应一个 Slot，如果某一位为 1，表示这个 Slot 属于当前实例 实例间通信频率 Gossip 协议的工作原理第二点 实例每 100ms 扫描本地的实例列表，如果发现有实例最近一次接收 PONG 消息的时间已经大于配置项 cluster-node-timeout 的一半，就会立刻给该实例发送 PING 消息，更新这个实例上的集群状态信息 每秒会发送的 PING 消息数量 = 1 + 10 * 实例数 实例数 = 最近一次接收 PONG 消息的时间超出 cluster-node-timeout/2 降低实例间的通信开销 不能减小实例传输的消息大小 只能修改 cluster-node-timeout 配置项 默认 15 秒，调大到 20 或 25 秒 验证调整后的值是否能减少心跳消息占用的集群网络带宽 调整前后使用 tcpdump 命令抓取实例发送心跳信息网络包的情况 例如，执行：tcpdump host 192.</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>39｜Redis 6.0 的新特性：多线程、客户端缓存与安全</title>
    <link>https://wangze.tech/39%EF%BD%9CRedis-6.0-%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E5%A4%9A%E7%BA%BF%E7%A8%8B%E3%80%81%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98%E4%B8%8E%E5%AE%89%E5%85%A8</link>
    <guid>https://wangze.tech/39%EF%BD%9CRedis-6.0-%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E5%A4%9A%E7%BA%BF%E7%A8%8B%E3%80%81%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98%E4%B8%8E%E5%AE%89%E5%85%A8</guid>
    <description>多 IO 线程 作用：使用多个 IO 线程并行读取网络请求、进行协议解析、回写 Socket 主线程和 IO 线程协作完成请求处理 阶段一：服务端和客户端建立 Socket 连接，并分配处理线程 阶段二：IO 线程读取并解析请求 阶段三：主线程执行请求操作 阶段四：IO 线程回写 Socket 和主线程清空全局队列 启用多线程命令：io-threads-do-reads yes 设置线程个数命令：io-threads 6 一般要小于实例所在机器的 CPU 核个数 例如，对于一个 8 核的机器来说，Redis 官方建议配置 6 个 IO 线程 如果在实际应用中，发现 Redis 实例的 CPU 开销不大，吞吐量却没有提升，可以考虑使用 Redis 6.</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>40｜Redis 的下一步：基于 NVM 内存的实践</title>
    <link>https://wangze.tech/40%EF%BD%9CRedis-%E7%9A%84%E4%B8%8B%E4%B8%80%E6%AD%A5%EF%BC%9A%E5%9F%BA%E4%BA%8E-NVM-%E5%86%85%E5%AD%98%E7%9A%84%E5%AE%9E%E8%B7%B5</link>
    <guid>https://wangze.tech/40%EF%BD%9CRedis-%E7%9A%84%E4%B8%8B%E4%B8%80%E6%AD%A5%EF%BC%9A%E5%9F%BA%E4%BA%8E-NVM-%E5%86%85%E5%AD%98%E7%9A%84%E5%AE%9E%E8%B7%B5</guid>
    <description> 特性 能持久化保存数据 读写速度比 DRAM 内存稍慢 DRAM：Dynamic random-access memory 动态随机存取存储器（半导体记存储器） 容量大 Optane AEP 内存条（简称 AEP 内存，Intel 2019 年 4 月份推出） Memory 模式 只用容量大和性能高的特性，没有启用数据持久化功能 仍需配 DRAM 内存，但它是作为 AEP 内存的缓存，对应用软件不可见 软件系统能使用到的内存空间，就是 AEP 内存条的空间容量 App Direct 模式 启用持久化数据的功能 此模式的 AEP 内存叫做持久化内存（Persistent Memory，PM） 使用方法 部署 PM 格式化 挂载到服务器的一个目录下 在目录下创建文件，通过内存映射（mmap）的方式把文件映射到 Redis 的进程空间 仍需要主从集群 分担读压力 没有了 RDB，主从复制的实现，二选一 首先，增加从节点时，把全库数据拷贝到从节点上 一、用写前日志，日志拷贝到从节点进行回放 会带来双写问题 二、主节点在 NVM 上做快照，但不写文件，从节点直接从主节点的 NVM 上通过远程内存拷贝来实现复制，需要基于 RDMA（远程内存访问） 来做 应用程序如何基于持久化内存恢复自身的状态？ 把应用程序本身的运行时状态，如堆栈等也保存到持久化内存上，需要对操作系统的内核做修改 目前还没有成熟的方案（2021.</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>41｜第 35～40 讲课后思考题答案及常见问题答疑</title>
    <link>https://wangze.tech/41%EF%BD%9C%E7%AC%AC-35%EF%BD%9E40-%E8%AE%B2%E8%AF%BE%E5%90%8E%E6%80%9D%E8%80%83%E9%A2%98%E7%AD%94%E6%A1%88%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91</link>
    <guid>https://wangze.tech/41%EF%BD%9C%E7%AC%AC-35%EF%BD%9E40-%E8%AE%B2%E8%AF%BE%E5%90%8E%E6%80%9D%E8%80%83%E9%A2%98%E7%AD%94%E6%A1%88%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91</guid>
    <description> Memcached 是内存键值数据库 RocksDB 是硬盘键值数据库（持久化） Redis 和 Memcached 的比较 Redis 和 RocksDB 的比较 可扩展性 Memcached &gt; Codis &gt; Redis Cluster 一致性哈希的集群扩容 假设新加入的节点在一致性哈希圆环上是 A 沿逆时针方向的前一个集群节点是 B 只需要迁移 B 和 A 之间的数据 数据迁移量比普通哈希后取模的方法的量少 5 分钟理解一致性哈希算法（掘金） .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>Capslock</title>
    <link>https://wangze.tech/Capslock</link>
    <guid>https://wangze.tech/Capslock</guid>
    <description>功能 加强 Caps 键功能 安装 Github 到系统设置 - 键盘 - 键盘快捷键 - Modifier Keys 里选择键盘 设置单击 Caps 切换输入法 打开配置文件 ~/.config/karabiner/karabiner.json 搜 &quot;key_code&quot;: &quot;spacebar&quot; 将 to_if_alone 值改成 caps_lock .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>Crontab 执行提示没有权限</title>
    <link>https://wangze.tech/Crontab-%E6%89%A7%E8%A1%8C%E6%8F%90%E7%A4%BA%E6%B2%A1%E6%9C%89%E6%9D%83%E9%99%90</link>
    <guid>https://wangze.tech/Crontab-%E6%89%A7%E8%A1%8C%E6%8F%90%E7%A4%BA%E6%B2%A1%E6%9C%89%E6%9D%83%E9%99%90</guid>
    <description> Mac 的解决方案：How to Fix Cron “Operation not permitted” error in macOS - ITPro Helper 检查有没有用户对应的 home 目录 .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>Linux 安装 oh-my-zsh</title>
    <link>https://wangze.tech/Linux-%E5%AE%89%E8%A3%85-oh-my-zsh</link>
    <guid>https://wangze.tech/Linux-%E5%AE%89%E8%A3%85-oh-my-zsh</guid>
    <description>安装 Zsh https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH sudo apt install zsh # 查看所有可用 shell chsh -l # 将终端默认 shell 切换到 zsh，后面要输入实际看到的 zsh 路径 chsh -s /bin/zsh # 新开一个终端确认是否切换成功 echo $SHELL 安装 oh-my-zsh https://ohmyz.</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>Obsidian</title>
    <link>https://wangze.tech/Obsidian</link>
    <guid>https://wangze.tech/Obsidian</guid>
    <description> 官网 Obsidian 是一个功能强大且可扩展的知识库，它在您的本地纯文本文件文件夹之上运行。 .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item><item>
    <title>Oh My Zsh</title>
    <link>https://wangze.tech/Oh-My-Zsh</link>
    <guid>https://wangze.tech/Oh-My-Zsh</guid>
    <description> Linux 用户看：Linux 安装 oh-my-zsh Mac 用户往下看 安装 切换到系统自带的 Zsh：chsh -s /bin/zsh Oh My Zsh 插件 brew install autojump brew install zsh-syntax-highlighting brew install zsh-autosuggestions # 添加以下内容到 .</description>
    <pubDate>Thu, 22 Feb 2024 15:00:43 GMT</pubDate>
  </item>
    </channel>
  </rss>